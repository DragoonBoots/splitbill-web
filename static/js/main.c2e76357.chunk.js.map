{"version":3,"sources":["components/FormTableActionButtons.js","BillLinesForm.js","components/DateRangePickerField.js","PeopleForm.js","calculator/calculator.js","ResultsTable.js","App.js","index.js"],"names":["UpButton","props","Button","variant","className","DownButton","AddButton","RemoveButton","FormTableActionButtons","ButtonGroup","disabled","index","onClick","arrayHelpers","move","values","length","insert","remove","NameField","as","BsForm","Control","name","type","component","AmountField","InputGroup","Prepend","Text","min","step","TaxRateField","Append","IsUsageField","Check","id","BillLinesForm","lines","map","line","Table","striped","bordered","hover","scope","DatePickerField","setFieldValue","useFormikContext","useField","field","onChange","val","required","DateRangeField","DateRangePicker","maxDate","DateTime","local","toJSDate","calendarIcon","clearIcon","PeopleForm","people","person","PersonPeriod","period","this","BillLine","taxRate","amount","Big","split","SplitBill","usageTotal","generalTotal","add","BillPortion","Bill","totalAmount","usageLines","filter","generalLines","dummyUsage","push","dummyGeneral","_applyTax","_accumulate","personPeriods","names","size","totals","total","usagePart","div","periodDays","Array","from","offset","start","plus","dayParts","Map","everyoneUsageDays","day","dayPartCount","personPeriod","contains","set","everyoneUsageAmount","times","dayUsageAmounts","get","generalPortion","portions","usagePortion","minus","abs","round","gte","ResultsTable","portion","toFixed","defaultValues","bill","dateRange","months","tax","usage","Permalink","isoDate","fromISO","url","data","searchParams","_paramName","JSON","parse","_dateFromISO","e","permalink","URL","document","location","stringify","key","value","startsWith","App","state","results","handleCalculate","bind","handleSubmit","handlePermalink","validate","createBill","createPeople","personNames","Interval","fromDateTimes","setState","fromValues","permalinkDisplay","getElementById","getElementsByTagName","toString","classList","permalinkField","oldDesignMode","designMode","select","execCommand","formikBag","button","_submitButton","setSubmitting","errors","billError","valid","billPeriod","personValues","engulfs","billLine","Set","interval","isArray","after","days","initialValues","toValues","Navbar","bg","Brand","Container","onSubmit","formikProps","Row","Col","Group","controlId","Label","Alert","isSubmitting","isValidating","isValid","copyPermalink","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c2e76357.chunk.js","sourcesContent":["import {Button, ButtonGroup} from \"react-bootstrap\";\nimport React from \"react\";\n\nexport function UpButton(props) {\n    return (\n        <Button\n            {...props}\n            variant=\"outline-secondary\"\n        >\n            <span className=\"sr-only\">Move up</span>\n            <i className=\"bi-arrow-up-circle-fill\"/>\n        </Button>\n    );\n}\n\nexport function DownButton(props) {\n    return (\n        <Button\n            {...props}\n            variant=\"outline-secondary\"\n        >\n            <span className=\"sr-only\">Move down</span>\n            <i className=\"bi-arrow-down-circle-fill\"/>\n        </Button>\n    );\n}\n\nexport function AddButton(props) {\n    return (\n        <Button\n            {...props}\n            variant=\"outline-success\"\n        >\n            <span className=\"sr-only\">Insert below</span>\n            <i className=\"bi-plus-circle-fill\"/>\n        </Button>\n    );\n}\n\nexport function RemoveButton(props) {\n    return (\n        <Button\n            {...props}\n            variant=\"outline-danger\"\n        >\n            <span className=\"sr-only\">Remove</span>\n            <i className=\"bi-x-circle-fill\"/>\n        </Button>\n    );\n}\n\nexport function FormTableActionButtons(props) {\n    return (\n        <ButtonGroup>\n            <UpButton\n                disabled={props.index === 0}\n                onClick={() => props.arrayHelpers.move(props.index, props.index - 1)}\n            />\n            <DownButton\n                disabled={props.index === props.values.length - 1}\n                onClick={() => props.arrayHelpers.move(props.index, props.index + 1)}\n            />\n            <AddButton\n                onClick={() => props.arrayHelpers.insert(props.index + 1, props.values[props.index])}\n            />\n            <RemoveButton\n                disabled={props.values.length === 1}\n                onClick={() => props.arrayHelpers.remove(props.index)}\n            />\n        </ButtonGroup>\n    );\n}\n\nexport default FormTableActionButtons;\n","import React from 'react';\nimport {Form as BsForm, InputGroup, Table} from \"react-bootstrap\";\nimport {ErrorMessage, Field} from 'formik';\nimport FormTableActionButtons from \"./components/FormTableActionButtons\";\n\nfunction NameField(props) {\n    return (\n        <div>\n            <Field\n                as={BsForm.Control}\n                name={`lines.${props.index}.name`}\n                type=\"text\"\n            />\n            <ErrorMessage\n                name={`lines.${props.index}.name`}\n                component=\"div\"\n                className=\"field-error\"\n            />\n        </div>\n    );\n}\n\nfunction AmountField(props) {\n    return (\n        <div>\n            <InputGroup>\n                <InputGroup.Prepend>\n                    <InputGroup.Text>$</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Field\n                    as={BsForm.Control}\n                    name={`lines.${props.index}.amount`}\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.01\"\n                />\n            </InputGroup>\n            <ErrorMessage\n                name={`lines.${props.index}.amount`}\n                component=\"div\"\n                className=\"field-error\"\n            />\n        </div>\n    );\n}\n\nfunction TaxRateField(props) {\n    return (\n        <div>\n            <InputGroup>\n                <Field\n                    as={BsForm.Control}\n                    name={`lines.${props.index}.tax`}\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.001\"\n                />\n                <InputGroup.Append>\n                    <InputGroup.Text>%</InputGroup.Text>\n                </InputGroup.Append>\n            </InputGroup>\n            <ErrorMessage\n                name={`lines.${props.index}.tax`}\n                component=\"div\"\n                className=\"field-error\"\n            />\n        </div>\n    );\n}\n\nfunction IsUsageField(props) {\n    return (\n        <div>\n            <Field\n                as={BsForm.Check}\n                type=\"checkbox\"\n                // id needed for Bootstrap control to function\n                id={`lines.${props.index}.usage`}\n                name={`lines.${props.index}.usage`}\n            />\n            <ErrorMessage\n                name={`lines.${props.index}.usage`}\n                component=\"div\"\n                className=\"field-error\"\n            />\n        </div>\n    );\n}\n\nexport function BillLinesForm(props) {\n    const lines = props.values.lines.map((line, index) => (\n        <tr key={index}>\n            <td>\n                <NameField index={index}/>\n            </td>\n            <td>\n                <AmountField index={index}/>\n            </td>\n            <td>\n                {/* Tax rate */}\n                <TaxRateField index={index}/>\n            </td>\n            <td>\n                {/* Is usage? */}\n                <IsUsageField index={index}/>\n            </td>\n            <td>\n                {/* Actions */}\n                <FormTableActionButtons\n                    index={index}\n                    values={props.values.lines}\n                    arrayHelpers={props.arrayHelpers}\n                />\n            </td>\n        </tr>\n    ));\n    return (\n        <div className=\"d-inline\">\n            <Table striped bordered hover>\n                <thead>\n                <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Amount</th>\n                    <th scope=\"col\">Tax</th>\n                    <th scope=\"col\">Usage</th>\n                    <th scope=\"col\"><span className=\"sr-only\">Actions</span></th>\n                </tr>\n                </thead>\n                <tbody>\n                {lines}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\nexport default BillLinesForm;\n","import React from \"react\";\nimport {useField, useFormikContext} from \"formik\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker/dist/entry.nostyle\";\n\n// Adapted from https://stackoverflow.com/questions/56312372/react-datepicker-with-a-formik-form\n\nexport function DatePickerField(props) {\n    const {setFieldValue} = useFormikContext();\n    const [field] = useField(props);\n    return (\n        <DateRangePicker\n            {...field}\n            {...props}\n            onChange={val => setFieldValue(field.name, val)}\n        />\n    );\n}\n\nexport default DatePickerField;\n","import React from 'react';\nimport {Form as BsForm, Table} from \"react-bootstrap\";\nimport {ErrorMessage, Field} from 'formik';\nimport FormTableActionButtons from \"./components/FormTableActionButtons\";\nimport {DateTime} from \"luxon\";\nimport DateRangePicker from \"./components/DateRangePickerField\"\n\nfunction NameField(props) {\n    return (\n        <div>\n            <Field\n                as={BsForm.Control}\n                name={`people.${props.index}.name`}\n                type=\"text\"\n                required\n            />\n            <ErrorMessage\n                name={`people.${props.index}.name`}\n                component=\"div\"\n                className=\"field-error\"\n            />\n        </div>\n    );\n}\n\nfunction DateRangeField(props) {\n    return (\n        <div>\n            <Field\n                as={DateRangePicker}\n                name={`people.${props.index}.dateRange`}\n                maxDate={DateTime.local().toJSDate()}\n                calendarIcon={<i className=\"bi-calendar-range-fill\"/>}\n                clearIcon={<i className=\"bi-x-square\"/>}\n            />\n            <ErrorMessage\n                name={`people.${props.index}.start`}\n                component=\"div\"\n                className=\"field-error\"\n            />\n        </div>\n    );\n}\n\nexport function PeopleForm(props) {\nconst people = props.values.people.map((person, index) => (\n        <tr key={index}>\n        <td>\n            <NameField index={index}/>\n        </td>\n        <td>\n            {/* Date range */}\n            <DateRangeField index={index}/>\n        </td>\n        <td>\n            {/* Actions */}\n            <FormTableActionButtons\n                index={index}\n                values={props.values.people}\n                arrayHelpers={props.arrayHelpers}\n            />\n        </td>\n</tr>\n))\n;\nreturn (\n    <div className=\"d-inline\">\n        <Table striped bordered hover>\n            <thead>\n            <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Date Range</th>\n                <th scope=\"col\"><span className=\"sr-only\">Actions</span></th>\n            </tr>\n            </thead>\n            <tbody>\n            {people}\n            </tbody>\n        </Table>\n    </div>\n);\n}\n\nexport default PeopleForm;\n","import Big from \"big.js\";\n\nexport class PersonPeriod {\n    constructor(name, period) {\n        this.name = name;\n        this.period = period;\n    }\n}\n\nexport class BillLine {\n    constructor() {\n        this.name = '';\n        this.taxRate = 0.0;\n        this.amount = new Big(0);\n        this.split = true;\n    }\n}\n\nexport class SplitBill {\n    constructor(usageTotal, generalTotal) {\n        this.usageTotal = usageTotal;\n        this.generalTotal = generalTotal;\n    }\n\n    total() {\n        return this.usageTotal.add(this.generalTotal);\n    }\n}\n\nexport class BillPortion extends SplitBill {\n    constructor(name, usageTotal, generalTotal) {\n        super(usageTotal, generalTotal);\n        this.name = name;\n    }\n}\n\nexport class Bill {\n    constructor() {\n        this.lines = [];\n        this.totalAmount = new Big(0);\n    }\n\n    static _applyTax(lines) {\n        for (const line of lines) {\n            line.amount = line.amount.times(line.taxRate + 1);\n        }\n    }\n\n    static _accumulate(lines) {\n        let total = new Big(0);\n        for (const line of lines) {\n            total = total.plus(line.amount);\n        }\n        return total;\n    }\n\n    total() {\n        if (this.lines.length === 0) {\n            return new SplitBill(new Big(0), new Big(0));\n        }\n\n        const usageLines = this.lines.filter(line => line.split);\n        const generalLines = this.lines.filter(line => !line.split);\n\n        // Sanity check to ensure there's something to work with for the rest of the process.\n        // These lines have amount and tax rate 0 so they won't affect calculations\n        if (usageLines.length === 0) {\n            const dummyUsage = new BillLine();\n            dummyUsage.split = true;\n            usageLines.push(dummyUsage);\n        }\n        if (generalLines.length === 0) {\n            const dummyGeneral = new BillLine();\n            dummyGeneral.split = false;\n            generalLines.push(dummyGeneral);\n        }\n\n        // Apply tax\n        Bill._applyTax(usageLines);\n        Bill._applyTax(generalLines);\n\n        // Tote the lines\n        const usageTotal = Bill._accumulate(usageLines);\n        const generalTotal = Bill._accumulate(generalLines);\n\n        // Placeholder\n        return new SplitBill(usageTotal, generalTotal);\n    }\n\n    split(period, personPeriods, names) {\n        if (names.size === 0) {\n            return [];\n        }\n\n        const totals = this.total();\n        // How much money presence on a certain day costs\n        const usagePart = totals.usageTotal.div(period.length('days'));\n        const periodDays = Array.from(function* () {\n            for (let offset = 0; offset < period.length('days'); ++offset) {\n                yield period.start.plus({'days': offset});\n            }\n        }());\n\n        // First pass: Determine how many parts each day must be split into.\n        const dayParts = new Map();\n        // Days where no person was present, so usage shall be distributed evenly.\n        let everyoneUsageDays = 0;\n        for (const day of periodDays) {\n            let dayPartCount = 0;\n            for (const personPeriod of personPeriods) {\n                if (personPeriod.period !== null && personPeriod.period.contains(day)) {\n                    dayPartCount++;\n                }\n            }\n            if (dayPartCount === 0) {\n                dayPartCount = names.size;\n                everyoneUsageDays++;\n            }\n            dayParts.set(day, dayPartCount);\n        }\n\n        // Everyone will have this amount added to their usage portion to account for days when no one was present.\n        const everyoneUsageAmount = usagePart.div(names.size).times(everyoneUsageDays);\n\n        // Second pass: divide the amount into chunks for each day, then divide those chunks into parts for\n        // each user present on that day.  The end result of this is that presence on a given day costs a\n        // certain amount.\n        const dayUsageAmounts = new Map();\n        for (const day of periodDays) {\n            dayUsageAmounts.set(day, usagePart.div(dayParts.get(day)));\n        }\n\n        // Third pass: total each user's contribution.\n        const generalPortion = totals.generalTotal.div(names.size);\n        const portions = [];\n        for (const person of names) {\n            let usagePortion = new Big(0).plus(everyoneUsageAmount);\n            for (const personPeriod of personPeriods) {\n                if (personPeriod.name !== person) {\n                    continue;\n                }\n                for (const day of periodDays) {\n                    if (personPeriod.period === null || !personPeriod.period.contains(day)) {\n                        continue;\n                    }\n                    usagePortion = usagePortion.plus(dayUsageAmounts.get(day));\n                }\n            }\n            portions.push(new BillPortion(person, usagePortion, generalPortion));\n        }\n\n        return portions;\n    }\n\n    valid() {\n        // Check line total equals bill total, with tax applied\n        const totals = this.total();\n        const errorMargin = 0.001;\n        if (totals.total().minus(this.totalAmount).abs().round(2).gte(errorMargin)) {\n            return 'Bill total not equal to the sum of the lines.';\n        }\n\n        // Valid\n        return '';\n    }\n}\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nexport function ResultsTable(props) {\n    if (props.portions.length === 0) {\n        return null;\n    }\n    const portions = props.portions.map(portion => (\n        <tr key={portion.name}>\n            <td>{portion.name}</td>\n            <td>${portion.generalTotal.round(2).toFixed(2)}</td>\n            <td>${portion.usageTotal.round(2).toFixed(2)}</td>\n            <td>${portion.generalTotal.plus(portion.usageTotal).round(2).toFixed(2)}</td>\n        </tr>\n    ));\n\n    return (\n        <Table striped bordered hover>\n            <thead>\n            <tr>\n                <th>Name</th>\n                <th>General</th>\n                <th>Usage</th>\n                <th>Total</th>\n            </tr>\n            </thead>\n            <tbody>\n            {portions}\n            </tbody>\n        </Table>\n    );\n}\n\nexport default ResultsTable;\n","import './style/App.scss';\nimport {Alert, Button, Col, Container, Form as BsForm, InputGroup, Navbar, Row} from \"react-bootstrap\";\nimport BillLinesForm from \"./BillLinesForm\";\nimport React from \"react\";\nimport {Field, FieldArray, Form, Formik} from \"formik\";\nimport {DateTime, Interval} from \"luxon\";\nimport PeopleForm from \"./PeopleForm\";\nimport {Bill, BillLine, PersonPeriod} from \"./calculator/calculator\";\nimport Big from \"big.js\";\nimport DateRangePicker from \"./components/DateRangePickerField\";\nimport ResultsTable from \"./ResultsTable\";\n\nconst defaultValues = {\n    bill: {\n        total: 0,\n        dateRange: [\n            // Initialize to a range starting 1 month prior to today\n            DateTime.local().minus({months: 1}).toJSDate(),\n            DateTime.local().toJSDate()\n        ],\n    },\n    lines: [\n        {\n            name: '',\n            amount: 0,\n            tax: 0,\n            usage: true,\n        },\n    ],\n    people: [\n        {\n            name: '',\n            dateRange: [\n                // Initialize to a range starting 1 month prior to today\n                DateTime.local().minus({months: 1}).toJSDate(),\n                DateTime.local().toJSDate()\n            ]\n        },\n    ],\n};\n\nclass Permalink {\n    static _paramName = 'data';\n\n    static _dateFromISO(isoDate) {\n        if (isoDate === null) {\n            return isoDate;\n        }\n        return DateTime.fromISO(isoDate);\n    }\n\n    static toValues(url) {\n        const data = url.searchParams.get(Permalink._paramName);\n        if (data === null) {\n            return null;\n        }\n        try {\n            const values = JSON.parse(data);\n            // Convert the ISO datetimes into objects\n            values.bill.dateRange = values.bill.dateRange.map(this._dateFromISO);\n            for (const person of values.people) {\n                if (person.dateRange !== null) {\n                    person.dateRange = person.dateRange.map(this._dateFromISO);\n                }\n            }\n\n            return values;\n        } catch (e) {\n            // Malformed data\n            return null;\n        }\n    }\n\n    static fromValues(values) {\n        const permalink = new URL(document.location);\n        const data = JSON.stringify(values, (key, value) => {\n            if (key.startsWith('_')) {\n                return undefined;\n            }\n            return value;\n        }, null);\n        permalink.searchParams.set(Permalink._paramName, data);\n\n        return permalink;\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            bill: new Bill(),\n            results: [],\n        };\n\n        this.handleCalculate = this.handleCalculate.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handlePermalink = this.handlePermalink.bind(this);\n        this.validate = this.validate.bind(this);\n    }\n\n    handleCalculate(values) {\n        const bill = this.createBill(values);\n        const [personNames, personPeriods] = this.createPeople(values);\n        const results = bill.split(Interval.fromDateTimes(\n            values.bill.dateRange[0],\n            values.bill.dateRange[1]\n        ), personPeriods, personNames);\n        this.setState({results: results});\n    }\n\n    handlePermalink(values) {\n        const permalink = Permalink.fromValues(values);\n        const permalinkDisplay = document.getElementById('permalink-display');\n        permalinkDisplay.getElementsByTagName('input')[0].value = permalink.toString();\n        permalinkDisplay.classList.remove('invisible');\n    }\n\n    copyPermalink() {\n        const permalinkDisplay = document.getElementById('permalink-display');\n        const permalinkField = permalinkDisplay.getElementsByTagName('input')[0];\n        const oldDesignMode = document.designMode;\n        document.designMode = \"on\";\n        permalinkField.select();\n        document.execCommand('copy', false, permalinkField.value);\n        document.designMode = oldDesignMode;\n    }\n\n    handleSubmit(values, formikBag) {\n        const button = values._submitButton;\n        if (button === 'calculate') {\n            this.handleCalculate(values, formikBag);\n        } else if (button === 'permalink') {\n            this.handlePermalink(values, formikBag);\n        }\n        formikBag.setSubmitting(false);\n    }\n\n    validate(values) {\n        const errors = {};\n\n        // General bill validation\n        const bill = this.createBill(values);\n        const billError = bill.valid();\n        if (billError.length > 0) {\n            errors.lines = billError;\n        }\n\n        // Ensure people are sane\n        const billPeriod = Interval.fromDateTimes(\n            values.bill.dateRange[0],\n            values.bill.dateRange[1]\n        )\n        for (const personValues of values.people) {\n            if (personValues.dateRange === null) {\n                continue;\n            }\n            const period = Interval.fromDateTimes(personValues.dateRange[0], personValues.dateRange[1]);\n            if (!billPeriod.engulfs(period)) {\n                errors.people = personValues.name + \" has dates outside the bill date range.\";\n                break;\n            }\n        }\n\n        return errors;\n    }\n\n    createBill(values) {\n        const bill = new Bill();\n        bill.totalAmount = new Big(values.bill.total);\n        for (const line of values.lines) {\n            const billLine = new BillLine();\n            billLine.name = line.name;\n            billLine.amount = new Big(line.amount);\n            billLine.taxRate = line.tax / 100.0;\n            billLine.split = line.usage;\n            bill.lines.push(billLine);\n        }\n\n        return bill;\n    }\n\n    createPeople(values) {\n        const personNames = new Set();\n        const personPeriods = [];\n        for (const person of values.people) {\n            personNames.add(person.name);\n            let interval = null;\n            if (person.dateRange !== null) {\n                if (Array.isArray(person.dateRange)) {\n                    interval = Interval.fromDateTimes(\n                        person.dateRange[0],\n                        person.dateRange[1]\n                    );\n                } else {\n                    interval = Interval.after(person.dateRange, {days: 1});\n                }\n            }\n            personPeriods.push(new PersonPeriod(person.name, interval));\n        }\n\n        return [personNames, personPeriods];\n    }\n\n    render() {\n        const initialValues = Permalink.toValues(new URL(document.location)) ?? defaultValues;\n        initialValues['_submitButton'] = '';\n\n        return (\n            <div>\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Navbar.Brand>Split Bill</Navbar.Brand>\n                </Navbar>\n                <Container>\n                    <Formik\n                        initialValues={initialValues}\n                        validate={this.validate}\n                        onSubmit={this.handleSubmit}\n                    >\n                        {formikProps => (\n                            <div>\n                                <Form>\n                                    <Row>\n                                        <Col>\n                                            <h1>Bill</h1>\n                                            <BsForm.Row>\n                                                <BsForm.Group as={Col} controlId=\"bill.total\">\n                                                    <BsForm.Label>Total</BsForm.Label>\n                                                    <InputGroup>\n                                                        <InputGroup.Prepend>\n                                                            <InputGroup.Text>$</InputGroup.Text>\n                                                        </InputGroup.Prepend>\n                                                        <Field\n                                                            as={BsForm.Control}\n                                                            name=\"bill.total\"\n                                                            type=\"number\"\n                                                            min=\"0\"\n                                                            step=\"0.01\"\n                                                        />\n                                                    </InputGroup>\n                                                </BsForm.Group>\n                                                <BsForm.Group as={Col} controlId=\"bill.dateRange\">\n                                                    <BsForm.Label>Date Range</BsForm.Label>\n                                                    <Field\n                                                        as={DateRangePicker}\n                                                        name=\"bill.dateRange\"\n                                                        maxDate={DateTime.local().toJSDate()}\n                                                        calendarIcon={<i className=\"bi-calendar-range-fill\"/>}\n                                                        clearIcon={null}\n                                                    />\n                                                </BsForm.Group>\n                                            </BsForm.Row>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <h1>People</h1>\n                                            <FieldArray name=\"people\">\n                                                {arrayHelpers => (\n                                                    <PeopleForm values={formikProps.values}\n                                                                arrayHelpers={arrayHelpers}/>\n                                                )}\n                                            </FieldArray>\n                                            {formikProps.errors.people &&\n                                            <Alert variant=\"danger\">{formikProps.errors.people}</Alert>}\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <h1>Lines</h1>\n                                            <FieldArray name=\"lines\">\n                                                {arrayHelpers => (\n                                                    <BillLinesForm values={formikProps.values}\n                                                                   arrayHelpers={arrayHelpers}/>\n                                                )}\n                                            </FieldArray>\n                                            {formikProps.errors.lines &&\n                                            <Alert variant=\"danger\">{formikProps.errors.lines}</Alert>}\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <h1>Results</h1>\n                                            <div className=\"result-buttons\">\n                                                <Button className=\"result-buttons__calculate\" variant=\"primary\"\n                                                        type=\"submit\"\n                                                        disabled={formikProps.isSubmitting || formikProps.isValidating || !formikProps.isValid}\n                                                        onClick={() => formikProps.setFieldValue('_submitButton', 'calculate')}>\n                                                    Calculate\n                                                </Button>\n                                                <Button className=\"result-buttons__permalink\" variant=\"secondary\"\n                                                        type=\"submit\"\n                                                        disabled={formikProps.isSubmitting}\n                                                        onClick={() => formikProps.setFieldValue('_submitButton', 'permalink')}>\n                                                    Create Permalink\n                                                </Button>\n                                                <InputGroup id=\"permalink-display\"\n                                                            className=\"result-buttons__permalink__display invisible\">\n                                                    <BsForm.Control type=\"text\"/>\n                                                    <InputGroup.Append>\n                                                        <Button variant=\"outline-primary\" type=\"button\"\n                                                                onClick={this.copyPermalink}>\n                                                            <span className=\"sr-only\">Copy</span>\n                                                            <i className=\"bi-clipboard\"/>\n                                                        </Button>\n                                                    </InputGroup.Append>\n                                                </InputGroup>\n                                            </div>\n                                            <ResultsTable portions={this.state.results}/>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </div>\n                        )}\n                    </Formik>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}