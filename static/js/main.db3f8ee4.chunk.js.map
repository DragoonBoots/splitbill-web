{"version":3,"sources":["components/FormTableActionButtons.js","components/SmallFormAccordionToggle.js","BillLinesForm.js","components/DateRangePickerField.js","PeopleForm.js","calculator/calculator.js","ResultsTable.js","app-icon.svg","App.js","index.js"],"names":["UpButton","props","Button","variant","className","DownButton","AddButton","RemoveButton","FormTableActionButtons","ButtonGroup","disabled","index","onClick","arrayHelpers","move","values","length","insert","remove","SmallFormAccordionToggle","children","eventKey","block","useAccordionToggle","NameField","as","BsForm","Control","name","type","component","AmountField","InputGroup","Prepend","Text","min","step","TaxRateField","Append","IsUsageField","Check","id","label","BillLinesFormSm","lines","map","line","Card","Header","Accordion","Collapse","Body","Group","Label","defaultActiveKey","BillLinesFormMd","Table","striped","bordered","hover","scope","BillLinesForm","DatePickerField","setFieldValue","useFormikContext","useField","field","startDate","endDate","minDate","maxDate","DateTime","local","toISODate","updateValueFromNativeControl","start","end","oldStart","oldEnd","Array","isArray","value","toJSDate","every","test","fromJSDate","max","onChange","e","control","target","fromISO","val","controlId","required","DateRangeField","DateRangePicker","calendarIcon","clearIcon","PeopleFormSm","people","person","PeopleFormMd","PeopleForm","PersonPeriod","period","this","BillLine","taxRate","amount","Big","split","SplitBill","usageTotal","generalTotal","add","BillPortion","Bill","totalAmount","usageLines","filter","generalLines","dummyUsage","push","dummyGeneral","_applyTax","_accumulate","personPeriods","names","size","totals","total","usagePart","div","periodDays","from","offset","plus","dayParts","Map","everyoneUsageDays","day","dayPartCount","personPeriod","contains","set","everyoneUsageAmount","times","dayUsageAmounts","get","generalPortion","portions","usagePortion","minus","abs","round","gte","ResultsTable","portion","toFixed","defaultValues","bill","dateRange","months","tax","usage","Permalink","isoDate","url","data","searchParams","_paramName","JSON","parse","_dateFromISO","permalink","URL","document","location","stringify","key","startsWith","App","state","results","handleCalculate","bind","handleSubmit","handlePermalink","validate","createBill","createPeople","personNames","Interval","fromDateTimes","setState","fromValues","permalinkDisplay","getElementById","getElementsByTagName","toString","classList","permalinkField","oldDesignMode","designMode","select","execCommand","formikBag","button","_submitButton","setSubmitting","errors","billError","valid","billPeriod","personValues","engulfs","billLine","Set","interval","after","days","initialValues","toValues","Navbar","bg","Brand","alt","src","logo","width","height","Container","fluid","onSubmit","formikProps","Row","Col","sm","Alert","isSubmitting","isValidating","isValid","copyPermalink","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.db3f8ee4.chunk.js","sourcesContent":["import {Button, ButtonGroup} from \"react-bootstrap\";\nimport React from \"react\";\n\nexport function UpButton(props) {\n    return (\n        <Button\n            {...props}\n            variant=\"outline-secondary\"\n        >\n            <span className=\"sr-only\">Move up</span>\n            <i className=\"bi-arrow-up-circle-fill\"/>\n        </Button>\n    );\n}\n\nexport function DownButton(props) {\n    return (\n        <Button\n            {...props}\n            variant=\"outline-secondary\"\n        >\n            <span className=\"sr-only\">Move down</span>\n            <i className=\"bi-arrow-down-circle-fill\"/>\n        </Button>\n    );\n}\n\nexport function AddButton(props) {\n    return (\n        <Button\n            {...props}\n            variant=\"outline-success\"\n        >\n            <span className=\"sr-only\">Insert below</span>\n            <i className=\"bi-plus-circle-fill\"/>\n        </Button>\n    );\n}\n\nexport function RemoveButton(props) {\n    return (\n        <Button\n            {...props}\n            variant=\"outline-danger\"\n        >\n            <span className=\"sr-only\">Remove</span>\n            <i className=\"bi-x-circle-fill\"/>\n        </Button>\n    );\n}\n\nexport function FormTableActionButtons(props) {\n    return (\n        <ButtonGroup>\n            <UpButton\n                disabled={props.index === 0}\n                onClick={() => props.arrayHelpers.move(props.index, props.index - 1)}\n            />\n            <DownButton\n                disabled={props.index === props.values.length - 1}\n                onClick={() => props.arrayHelpers.move(props.index, props.index + 1)}\n            />\n            <AddButton\n                onClick={() => props.arrayHelpers.insert(props.index + 1, props.values[props.index])}\n            />\n            <RemoveButton\n                disabled={props.values.length === 1}\n                onClick={() => props.arrayHelpers.remove(props.index)}\n            />\n        </ButtonGroup>\n    );\n}\n\nexport default FormTableActionButtons;\n","import {Button, useAccordionToggle} from \"react-bootstrap\";\nimport React from \"react\";\n\nexport function SmallFormAccordionToggle({children, eventKey}) {\n    return (\n        <Button\n            block\n            variant=\"link\"\n            className=\"text-left text-truncate\"\n            onClick={useAccordionToggle(eventKey)}>\n            {children}\n        </Button>\n    );\n}\n\nexport default SmallFormAccordionToggle;\n","import React from 'react';\nimport {Accordion, Card, Form as BsForm, InputGroup, Table} from \"react-bootstrap\";\nimport {ErrorMessage, Field} from 'formik';\nimport FormTableActionButtons from \"./components/FormTableActionButtons\";\nimport SmallFormAccordionToggle from \"./components/SmallFormAccordionToggle\";\n\nfunction NameField(props) {\n    return (\n        <div>\n            <Field\n                as={BsForm.Control}\n                name={`lines.${props.index}.name`}\n                type=\"text\"\n            />\n            <ErrorMessage\n                name={`lines.${props.index}.name`}\n                component=\"div\"\n                className=\"field-error\"\n            />\n        </div>\n    );\n}\n\nfunction AmountField(props) {\n    return (\n        <div>\n            <InputGroup>\n                <InputGroup.Prepend>\n                    <InputGroup.Text>$</InputGroup.Text>\n                </InputGroup.Prepend>\n                <Field\n                    as={BsForm.Control}\n                    name={`lines.${props.index}.amount`}\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.01\"\n                />\n            </InputGroup>\n            <ErrorMessage\n                name={`lines.${props.index}.amount`}\n                component=\"div\"\n                className=\"field-error\"\n            />\n        </div>\n    );\n}\n\nfunction TaxRateField(props) {\n    return (\n        <div>\n            <InputGroup>\n                <Field\n                    as={BsForm.Control}\n                    name={`lines.${props.index}.tax`}\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.001\"\n                />\n                <InputGroup.Append>\n                    <InputGroup.Text>%</InputGroup.Text>\n                </InputGroup.Append>\n            </InputGroup>\n            <ErrorMessage\n                name={`lines.${props.index}.tax`}\n                component=\"div\"\n                className=\"field-error\"\n            />\n        </div>\n    );\n}\n\nfunction IsUsageField(props) {\n    return (\n        <div>\n            <Field\n                as={BsForm.Check}\n                type=\"checkbox\"\n                // id needed for Bootstrap control to function\n                id={`lines.${props.index}.usage`}\n                name={`lines.${props.index}.usage`}\n                label={props.label}\n            />\n            <ErrorMessage\n                name={`lines.${props.index}.usage`}\n                component=\"div\"\n                className=\"field-error\"\n            />\n        </div>\n    );\n}\n\n\nfunction BillLinesFormSm(props) {\n    const lines = props.values.lines.map((line, index) => (\n        <Card key={index}>\n            <Card.Header className=\"d-flex justify-content-between\">\n                <SmallFormAccordionToggle eventKey={`lines.${index}`}>\n                    {line.name.length === 0 ? <em>Untitled</em> : line.name}\n                </SmallFormAccordionToggle>\n                <FormTableActionButtons\n                    index={index}\n                    values={props.values.lines}\n                    arrayHelpers={props.arrayHelpers}\n                />\n            </Card.Header>\n            <Accordion.Collapse eventKey={`lines.${index}`}>\n                <Card.Body>\n                    <BsForm.Group>\n                        <BsForm.Label>Name</BsForm.Label>\n                        <NameField index={index}/>\n                    </BsForm.Group>\n                    <BsForm.Group>\n                        <BsForm.Label>Amount</BsForm.Label>\n                        <AmountField index={index}/>\n                    </BsForm.Group>\n                    <BsForm.Group>\n                        <BsForm.Label>Tax Rate</BsForm.Label>\n                        <TaxRateField index={index}/>\n                    </BsForm.Group>\n                    <BsForm.Group>\n                        <IsUsageField index={index} label=\"Usage\"/>\n                    </BsForm.Group>\n                </Card.Body>\n            </Accordion.Collapse>\n        </Card>\n    ));\n    return (\n        <Accordion defaultActiveKey=\"lines.0\">\n            {lines}\n        </Accordion>\n    );\n}\n\nfunction BillLinesFormMd(props) {\n    const lines = props.values.lines.map((line, index) => (\n        <tr key={index}>\n            <td>\n                <NameField index={index}/>\n            </td>\n            <td>\n                <AmountField index={index}/>\n            </td>\n            <td>\n                <TaxRateField index={index}/>\n            </td>\n            <td>\n                <IsUsageField index={index}/>\n            </td>\n            <td>\n                <FormTableActionButtons\n                    index={index}\n                    values={props.values.lines}\n                    arrayHelpers={props.arrayHelpers}\n                />\n            </td>\n        </tr>\n    ));\n    return (\n        <Table striped bordered hover>\n            <thead>\n            <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Amount</th>\n                <th scope=\"col\">Tax</th>\n                <th scope=\"col\">Usage</th>\n                <th scope=\"col\"><span className=\"sr-only\">Actions</span></th>\n            </tr>\n            </thead>\n            <tbody>\n            {lines}\n            </tbody>\n        </Table>\n    );\n}\n\nexport function BillLinesForm(props) {\n    return (\n        <div>\n            <div className=\"d-md-none\">\n                <BillLinesFormSm {...props}/>\n            </div>\n            <div className=\"d-none d-md-block\">\n                <BillLinesFormMd {...props}/>\n            </div>\n        </div>\n    );\n}\n\nexport default BillLinesForm;\n","import React from \"react\";\nimport {useField, useFormikContext} from \"formik\";\nimport DateRangePicker from \"@wojtekmaj/react-daterange-picker/dist/entry.nostyle\";\nimport {Form as BsForm, InputGroup} from \"react-bootstrap\";\nimport {DateTime} from \"luxon\";\n\nexport function DatePickerField(props) {\n    const {setFieldValue} = useFormikContext();\n    const [field] = useField(props);\n    let startDate = null;\n    let endDate = null;\n    let minDate = props.minDate ?? null;\n    let maxDate = props.maxDate ?? DateTime.local().toISODate();\n    if (Array.isArray(field.value)) {\n        startDate = DateTime.fromJSDate(field.value[0]).toISODate();\n        endDate = DateTime.fromJSDate(field.value[1]).toISODate();\n    }\n\n    // Convert the values returned from the pair of native controls\n    function updateValueFromNativeControl(start, end) {\n        // Normalize existing data\n        let oldStart = null;\n        let oldEnd = null;\n        if (Array.isArray(field.value)) {\n            oldStart = field.value[0];\n            oldEnd = field.value[1];\n        }\n        // Update data\n        let values = [\n            start !== null ? start.toJSDate() : oldStart,\n            end !== null ? end.toJSDate() : oldEnd,\n        ]\n\n        // Normalize no start or end date\n        if (values.every(test => test === null)) {\n            values = null;\n        }\n\n        // Set field values\n        setFieldValue(field.name, values);\n    }\n\n    return (\n        <div>\n            <div className=\"d-md-none\">\n                <InputGroup>\n                    <BsForm.Control\n                        type=\"date\"\n                        value={startDate ?? \"\"}\n                        min={minDate}\n                        max={endDate}\n                        onChange={e => {\n                            const control = e.target;\n                            updateValueFromNativeControl(DateTime.fromISO(control.value), null);\n                        }}\n                    />\n                    <BsForm.Control\n                        type=\"date\"\n                        value={endDate ?? \"\"}\n                        min={startDate}\n                        max={maxDate}\n                        onChange={e => {\n                            const control = e.target;\n                            updateValueFromNativeControl(null, DateTime.fromISO(control.value));\n                        }}\n                    />\n                </InputGroup>\n            </div>\n            <div className=\"d-none d-md-block\">\n                <DateRangePicker\n                    {...field}\n                    {...props}\n                    onChange={val => setFieldValue(field.name, val)}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default DatePickerField;\n","import React from 'react';\nimport {Accordion, Card, Form as BsForm, Table} from \"react-bootstrap\";\nimport {ErrorMessage, Field} from 'formik';\nimport FormTableActionButtons from \"./components/FormTableActionButtons\";\nimport {DateTime} from \"luxon\";\nimport DateRangePicker from \"./components/DateRangePickerField\"\nimport SmallFormAccordionToggle from \"./components/SmallFormAccordionToggle\";\n\nfunction NameField(props) {\n    const controlId = `people.${props.index}.name`;\n    return (\n        <div>\n            <Field\n                as={BsForm.Control}\n                id={controlId}\n                name={controlId}\n                type=\"text\"\n                required\n            />\n            <ErrorMessage\n                name={controlId}\n                component=\"div\"\n                className=\"field-error\"\n            />\n        </div>\n    );\n}\n\nfunction DateRangeField(props) {\n    const controlId = `people.${props.index}.dateRange`;\n    return (\n        <div>\n            <Field\n                as={DateRangePicker}\n                id={controlId}\n                name={controlId}\n                maxDate={DateTime.local().toJSDate()}\n                calendarIcon={<i className=\"bi-calendar-range-fill\"/>}\n                clearIcon={<i className=\"bi-x-square\"/>}\n            />\n            <ErrorMessage\n                name={controlId}\n                component=\"div\"\n                className=\"field-error\"\n            />\n        </div>\n    );\n}\n\nfunction PeopleFormSm(props) {\n    const people = props.values.people.map((person, index) => (\n        <Card key={index}>\n            <Card.Header className=\"d-flex justify-content-between\">\n                <SmallFormAccordionToggle eventKey={`people.${index}`}>\n                    {person.name.length === 0 ? <em>Unnamed</em> : person.name}\n                </SmallFormAccordionToggle>\n                <FormTableActionButtons\n                    index={index}\n                    values={props.values.people}\n                    arrayHelpers={props.arrayHelpers}\n                />\n            </Card.Header>\n            <Accordion.Collapse eventKey={`people.${index}`}>\n                <Card.Body>\n                    <BsForm.Group>\n                        <BsForm.Label>Name</BsForm.Label>\n                        <NameField index={index}/>\n                    </BsForm.Group>\n                    <BsForm.Group>\n                        <BsForm.Label>Date Range</BsForm.Label>\n                        <DateRangeField index={index}/>\n                    </BsForm.Group>\n                </Card.Body>\n            </Accordion.Collapse>\n        </Card>\n    ));\n    return (\n        <Accordion defaultActiveKey=\"people.0\">\n            {people}\n        </Accordion>\n    );\n}\n\nfunction PeopleFormMd(props) {\n    const people = props.values.people.map((person, index) => (\n        <tr key={index}>\n            <td>\n                <NameField index={index}/>\n            </td>\n            <td>\n                <DateRangeField index={index}/>\n            </td>\n            <td>\n                <FormTableActionButtons\n                    index={index}\n                    values={props.values.people}\n                    arrayHelpers={props.arrayHelpers}\n                />\n            </td>\n        </tr>\n    ));\n    return (\n        <Table striped bordered hover>\n            <thead>\n            <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Date Range</th>\n                <th scope=\"col\"><span className=\"sr-only\">Actions</span></th>\n            </tr>\n            </thead>\n            <tbody>\n            {people}\n            </tbody>\n        </Table>\n    );\n}\n\nexport function PeopleForm(props) {\n    return (\n        <div>\n            <div className=\"d-md-none\">\n                <PeopleFormSm {...props}/>\n            </div>\n            <div className=\"d-none d-md-block\">\n                <PeopleFormMd {...props}/>\n            </div>\n        </div>\n    );\n}\n\nexport default PeopleForm;\n","import Big from \"big.js\";\n\nexport class PersonPeriod {\n    constructor(name, period) {\n        this.name = name;\n        this.period = period;\n    }\n}\n\nexport class BillLine {\n    constructor() {\n        this.name = '';\n        this.taxRate = 0.0;\n        this.amount = new Big(0);\n        this.split = true;\n    }\n}\n\nexport class SplitBill {\n    constructor(usageTotal, generalTotal) {\n        this.usageTotal = usageTotal;\n        this.generalTotal = generalTotal;\n    }\n\n    total() {\n        return this.usageTotal.add(this.generalTotal);\n    }\n}\n\nexport class BillPortion extends SplitBill {\n    constructor(name, usageTotal, generalTotal) {\n        super(usageTotal, generalTotal);\n        this.name = name;\n    }\n}\n\nexport class Bill {\n    constructor() {\n        this.lines = [];\n        this.totalAmount = new Big(0);\n    }\n\n    static _applyTax(lines) {\n        for (const line of lines) {\n            line.amount = line.amount.times(line.taxRate + 1);\n        }\n    }\n\n    static _accumulate(lines) {\n        let total = new Big(0);\n        for (const line of lines) {\n            total = total.plus(line.amount);\n        }\n        return total;\n    }\n\n    total() {\n        if (this.lines.length === 0) {\n            return new SplitBill(new Big(0), new Big(0));\n        }\n\n        const usageLines = this.lines.filter(line => line.split);\n        const generalLines = this.lines.filter(line => !line.split);\n\n        // Sanity check to ensure there's something to work with for the rest of the process.\n        // These lines have amount and tax rate 0 so they won't affect calculations\n        if (usageLines.length === 0) {\n            const dummyUsage = new BillLine();\n            dummyUsage.split = true;\n            usageLines.push(dummyUsage);\n        }\n        if (generalLines.length === 0) {\n            const dummyGeneral = new BillLine();\n            dummyGeneral.split = false;\n            generalLines.push(dummyGeneral);\n        }\n\n        // Apply tax\n        Bill._applyTax(usageLines);\n        Bill._applyTax(generalLines);\n\n        // Tote the lines\n        const usageTotal = Bill._accumulate(usageLines);\n        const generalTotal = Bill._accumulate(generalLines);\n\n        // Placeholder\n        return new SplitBill(usageTotal, generalTotal);\n    }\n\n    split(period, personPeriods, names) {\n        if (names.size === 0) {\n            return [];\n        }\n\n        const totals = this.total();\n        // How much money presence on a certain day costs\n        const usagePart = totals.usageTotal.div(period.length('days'));\n        const periodDays = Array.from(function* () {\n            for (let offset = 0; offset < period.length('days'); ++offset) {\n                yield period.start.plus({'days': offset});\n            }\n        }());\n\n        // First pass: Determine how many parts each day must be split into.\n        const dayParts = new Map();\n        // Days where no person was present, so usage shall be distributed evenly.\n        let everyoneUsageDays = 0;\n        for (const day of periodDays) {\n            let dayPartCount = 0;\n            for (const personPeriod of personPeriods) {\n                if (personPeriod.period !== null && personPeriod.period.contains(day)) {\n                    dayPartCount++;\n                }\n            }\n            if (dayPartCount === 0) {\n                dayPartCount = names.size;\n                everyoneUsageDays++;\n            }\n            dayParts.set(day, dayPartCount);\n        }\n\n        // Everyone will have this amount added to their usage portion to account for days when no one was present.\n        const everyoneUsageAmount = usagePart.div(names.size).times(everyoneUsageDays);\n\n        // Second pass: divide the amount into chunks for each day, then divide those chunks into parts for\n        // each user present on that day.  The end result of this is that presence on a given day costs a\n        // certain amount.\n        const dayUsageAmounts = new Map();\n        for (const day of periodDays) {\n            dayUsageAmounts.set(day, usagePart.div(dayParts.get(day)));\n        }\n\n        // Third pass: total each user's contribution.\n        const generalPortion = totals.generalTotal.div(names.size);\n        const portions = [];\n        for (const person of names) {\n            let usagePortion = new Big(0).plus(everyoneUsageAmount);\n            for (const personPeriod of personPeriods) {\n                if (personPeriod.name !== person) {\n                    continue;\n                }\n                for (const day of periodDays) {\n                    if (personPeriod.period === null || !personPeriod.period.contains(day)) {\n                        continue;\n                    }\n                    usagePortion = usagePortion.plus(dayUsageAmounts.get(day));\n                }\n            }\n            portions.push(new BillPortion(person, usagePortion, generalPortion));\n        }\n\n        return portions;\n    }\n\n    valid() {\n        // Check line total equals bill total, with tax applied\n        const totals = this.total();\n        const errorMargin = 0.001;\n        if (totals.total().minus(this.totalAmount).abs().round(2).gte(errorMargin)) {\n            return 'Bill total not equal to the sum of the lines.';\n        }\n\n        // Valid\n        return '';\n    }\n}\n","import React from \"react\";\nimport {Table} from \"react-bootstrap\";\n\nexport function ResultsTable(props) {\n    if (props.portions.length === 0) {\n        return null;\n    }\n    const portions = props.portions.map(portion => (\n        <tr key={portion.name}>\n            <td>{portion.name}</td>\n            <td>${portion.generalTotal.round(2).toFixed(2)}</td>\n            <td>${portion.usageTotal.round(2).toFixed(2)}</td>\n            <td>${portion.generalTotal.plus(portion.usageTotal).round(2).toFixed(2)}</td>\n        </tr>\n    ));\n\n    return (\n        <Table striped bordered hover>\n            <thead>\n            <tr>\n                <th>Name</th>\n                <th>General</th>\n                <th>Usage</th>\n                <th>Total</th>\n            </tr>\n            </thead>\n            <tbody>\n            {portions}\n            </tbody>\n        </Table>\n    );\n}\n\nexport default ResultsTable;\n","export default __webpack_public_path__ + \"static/media/app-icon.93bc18a9.svg\";","import './style/App.scss';\nimport {Alert, Button, Col, Container, Form as BsForm, InputGroup, Navbar, Row} from \"react-bootstrap\";\nimport BillLinesForm from \"./BillLinesForm\";\nimport React from \"react\";\nimport {Field, FieldArray, Form, Formik} from \"formik\";\nimport {DateTime, Interval} from \"luxon\";\nimport PeopleForm from \"./PeopleForm\";\nimport {Bill, BillLine, PersonPeriod} from \"./calculator/calculator\";\nimport Big from \"big.js\";\nimport DateRangePicker from \"./components/DateRangePickerField\";\nimport ResultsTable from \"./ResultsTable\";\nimport logo from \"./app-icon.svg\";\n\nconst defaultValues = {\n    bill: {\n        total: 0,\n        dateRange: [\n            // Initialize to a range starting 1 month prior to today\n            DateTime.local().minus({months: 1}).toJSDate(),\n            DateTime.local().toJSDate()\n        ],\n    },\n    lines: [\n        {\n            name: '',\n            amount: 0,\n            tax: 0,\n            usage: true,\n        },\n    ],\n    people: [\n        {\n            name: '',\n            dateRange: [\n                // Initialize to a range starting 1 month prior to today\n                DateTime.local().minus({months: 1}).toJSDate(),\n                DateTime.local().toJSDate()\n            ]\n        },\n    ],\n};\n\nclass Permalink {\n    static _paramName = 'data';\n\n    static _dateFromISO(isoDate) {\n        if (isoDate === null) {\n            return isoDate;\n        }\n        return DateTime.fromISO(isoDate).toJSDate();\n    }\n\n    static toValues(url) {\n        const data = url.searchParams.get(Permalink._paramName);\n        if (data === null) {\n            return null;\n        }\n        try {\n            const values = JSON.parse(data);\n            // Convert the ISO datetimes into objects\n            values.bill.dateRange = values.bill.dateRange.map(this._dateFromISO);\n            for (const person of values.people) {\n                if (person.dateRange !== null) {\n                    person.dateRange = person.dateRange.map(this._dateFromISO);\n                }\n            }\n\n            return values;\n        } catch (e) {\n            // Malformed data\n            return null;\n        }\n    }\n\n    static fromValues(values) {\n        const permalink = new URL(document.location);\n        const data = JSON.stringify(values, (key, value) => {\n            if (key.startsWith('_')) {\n                return undefined;\n            }\n            return value;\n        }, null);\n        permalink.searchParams.set(Permalink._paramName, data);\n\n        return permalink;\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            bill: new Bill(),\n            results: [],\n        };\n\n        this.handleCalculate = this.handleCalculate.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handlePermalink = this.handlePermalink.bind(this);\n        this.validate = this.validate.bind(this);\n    }\n\n    handleCalculate(values) {\n        const bill = this.createBill(values);\n        const [personNames, personPeriods] = this.createPeople(values);\n        const results = bill.split(Interval.fromDateTimes(\n            values.bill.dateRange[0],\n            values.bill.dateRange[1]\n        ), personPeriods, personNames);\n        this.setState({results: results});\n    }\n\n    handlePermalink(values) {\n        const permalink = Permalink.fromValues(values);\n        const permalinkDisplay = document.getElementById('permalink-display');\n        permalinkDisplay.getElementsByTagName('input')[0].value = permalink.toString();\n        permalinkDisplay.classList.remove('invisible');\n    }\n\n    copyPermalink() {\n        const permalinkDisplay = document.getElementById('permalink-display');\n        const permalinkField = permalinkDisplay.getElementsByTagName('input')[0];\n        const oldDesignMode = document.designMode;\n        document.designMode = \"on\";\n        permalinkField.select();\n        document.execCommand('copy', false, permalinkField.value);\n        document.designMode = oldDesignMode;\n    }\n\n    handleSubmit(values, formikBag) {\n        const button = values._submitButton;\n        if (button === 'calculate') {\n            this.handleCalculate(values, formikBag);\n        } else if (button === 'permalink') {\n            this.handlePermalink(values, formikBag);\n        }\n        formikBag.setSubmitting(false);\n    }\n\n    validate(values) {\n        const errors = {};\n\n        // General bill validation\n        const bill = this.createBill(values);\n        const billError = bill.valid();\n        if (billError.length > 0) {\n            errors.lines = billError;\n        }\n\n        // Ensure people are sane\n        const billPeriod = Interval.fromDateTimes(\n            values.bill.dateRange[0],\n            values.bill.dateRange[1]\n        )\n        for (const personValues of values.people) {\n            if (personValues.dateRange === null) {\n                continue;\n            }\n            const period = Interval.fromDateTimes(personValues.dateRange[0], personValues.dateRange[1]);\n            if (!billPeriod.engulfs(period)) {\n                errors.people = personValues.name + \" has dates outside the bill date range.\";\n                break;\n            }\n        }\n\n        return errors;\n    }\n\n    createBill(values) {\n        const bill = new Bill();\n        bill.totalAmount = new Big(values.bill.total);\n        for (const line of values.lines) {\n            const billLine = new BillLine();\n            billLine.name = line.name;\n            billLine.amount = new Big(line.amount);\n            billLine.taxRate = line.tax / 100.0;\n            billLine.split = line.usage;\n            bill.lines.push(billLine);\n        }\n\n        return bill;\n    }\n\n    createPeople(values) {\n        const personNames = new Set();\n        const personPeriods = [];\n        for (const person of values.people) {\n            personNames.add(person.name);\n            let interval = null;\n            if (person.dateRange !== null) {\n                if (Array.isArray(person.dateRange)) {\n                    interval = Interval.fromDateTimes(\n                        person.dateRange[0],\n                        person.dateRange[1]\n                    );\n                } else {\n                    interval = Interval.after(person.dateRange, {days: 1});\n                }\n            }\n            personPeriods.push(new PersonPeriod(person.name, interval));\n        }\n\n        return [personNames, personPeriods];\n    }\n\n    render() {\n        const initialValues = Permalink.toValues(new URL(document.location)) ?? defaultValues;\n        initialValues['_submitButton'] = '';\n\n        return (\n            <div>\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Navbar.Brand>\n                        <img alt=\"\" src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\"/>{' '}\n                        Split Bill\n                    </Navbar.Brand>\n                </Navbar>\n                <Container fluid=\"md\">\n                    <Formik\n                        initialValues={initialValues}\n                        validate={this.validate}\n                        onSubmit={this.handleSubmit}\n                    >\n                        {formikProps => (\n                            <div>\n                                <Form>\n                                    <Row>\n                                        <Col>\n                                            <h1>Bill</h1>\n                                            <BsForm.Row>\n                                                <Col>\n                                                    <BsForm.Group controlId=\"bill.total\">\n                                                        <BsForm.Label>Total</BsForm.Label>\n                                                        <InputGroup>\n                                                            <InputGroup.Prepend>\n                                                                <InputGroup.Text>$</InputGroup.Text>\n                                                            </InputGroup.Prepend>\n                                                            <Field\n                                                                as={BsForm.Control}\n                                                                name=\"bill.total\"\n                                                                type=\"number\"\n                                                                min=\"0\"\n                                                                step=\"0.01\"\n                                                            />\n                                                        </InputGroup>\n                                                    </BsForm.Group>\n                                                </Col>\n                                                <Col sm=\"auto\">\n                                                    <BsForm.Group controlId=\"bill.dateRange\">\n                                                        <BsForm.Label>Date Range</BsForm.Label>\n                                                        <Field\n                                                            as={DateRangePicker}\n                                                            name=\"bill.dateRange\"\n                                                            maxDate={DateTime.local().toJSDate()}\n                                                            calendarIcon={<i className=\"bi-calendar-range-fill\"/>}\n                                                            clearIcon={null}\n                                                        />\n                                                    </BsForm.Group>\n                                                </Col>\n                                            </BsForm.Row>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <h1>People</h1>\n                                            <FieldArray name=\"people\">\n                                                {arrayHelpers => (\n                                                    <PeopleForm values={formikProps.values}\n                                                                arrayHelpers={arrayHelpers}/>\n                                                )}\n                                            </FieldArray>\n                                            {formikProps.errors.people &&\n                                            <Alert variant=\"danger\">{formikProps.errors.people}</Alert>}\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <h1>Lines</h1>\n                                            <FieldArray name=\"lines\">\n                                                {arrayHelpers => (\n                                                    <BillLinesForm values={formikProps.values}\n                                                                   arrayHelpers={arrayHelpers}/>\n                                                )}\n                                            </FieldArray>\n                                            {formikProps.errors.lines &&\n                                            <Alert variant=\"danger\">{formikProps.errors.lines}</Alert>}\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <h1>Results</h1>\n                                            <div className=\"result-buttons\">\n                                                <Button className=\"result-buttons__calculate\" variant=\"primary\"\n                                                        type=\"submit\"\n                                                        disabled={formikProps.isSubmitting || formikProps.isValidating || !formikProps.isValid}\n                                                        onClick={() => formikProps.setFieldValue('_submitButton', 'calculate')}>\n                                                    Calculate\n                                                </Button>\n                                                <Button className=\"result-buttons__permalink\" variant=\"secondary\"\n                                                        type=\"submit\"\n                                                        disabled={formikProps.isSubmitting}\n                                                        onClick={() => formikProps.setFieldValue('_submitButton', 'permalink')}>\n                                                    Create Permalink\n                                                </Button>\n                                                <InputGroup id=\"permalink-display\"\n                                                            className=\"result-buttons__permalink__display invisible\">\n                                                    <BsForm.Control type=\"text\"/>\n                                                    <InputGroup.Append>\n                                                        <Button variant=\"outline-primary\" type=\"button\"\n                                                                onClick={this.copyPermalink}>\n                                                            <span className=\"sr-only\">Copy</span>\n                                                            <i className=\"bi-clipboard\"/>\n                                                        </Button>\n                                                    </InputGroup.Append>\n                                                </InputGroup>\n                                            </div>\n                                            <ResultsTable portions={this.state.results}/>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </div>\n                        )}\n                    </Formik>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}